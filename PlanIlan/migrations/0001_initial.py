# Generated by Django 3.1.4 on 2020-12-07 17:42

import datetime
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('course_id', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=80)),
                ('faculty', models.IntegerField(choices=[(89, 'מדעי המחשב')])),
                ('semester', models.IntegerField(choices=[(1, "סמסטר א'"), (2, "סמסטר ב'")])),
                ('details_link', models.URLField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='LessonTime',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.IntegerField(choices=[(1, 'ראשון'), (2, 'שני'), (3, 'שלישי'), (4, 'רביעי'), (5, 'חמישי'), (6, 'שישי')])),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('building_name', models.CharField(max_length=80)),
                ('building_number', models.IntegerField(null=True)),
                ('class_number', models.IntegerField(null=True)),
                ('online', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('name', models.CharField(max_length=80, primary_key=True, serialize=False)),
                ('title', models.IntegerField(choices=[(0, 'ד"ר'), (1, "פרופ'"), (2, 'מר'), (3, 'גברת')])),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('user_name', models.CharField(editable=False, max_length=30, primary_key=True, serialize=False, unique=True)),
                ('email', models.EmailField(editable=False, max_length=254)),
                ('salt', models.UUIDField(editable=False)),
                ('password_hash', models.BinaryField(max_length=1024)),
            ],
        ),
        migrations.CreateModel(
            name='TeacherRating',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('average', models.IntegerField(validators=[django.core.validators.MinValueValidator(0, 'Value should not fall short of 0'), django.core.validators.MaxValueValidator(5, 'Value should not exceed 5')])),
                ('amount_of_raters', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0, 'Value has to be a natural number')])),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PlanIlan.teacher')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TeacherPost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(default=datetime.datetime.now)),
                ('amount_of_likes', models.IntegerField(default=0)),
                ('headline', models.CharField(max_length=256)),
                ('text', models.TextField()),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PlanIlan.user')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PlanIlan.teacher')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CourseRating',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('average', models.IntegerField(validators=[django.core.validators.MinValueValidator(0, 'Value should not fall short of 0'), django.core.validators.MaxValueValidator(5, 'Value should not exceed 5')])),
                ('amount_of_raters', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0, 'Value has to be a natural number')])),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PlanIlan.course')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CoursePost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(default=datetime.datetime.now)),
                ('amount_of_likes', models.IntegerField(default=0)),
                ('headline', models.CharField(max_length=256)),
                ('text', models.TextField()),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PlanIlan.user')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PlanIlan.course')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='course',
            name='lesson_times',
            field=models.ManyToManyField(to='PlanIlan.LessonTime'),
        ),
        migrations.AddField(
            model_name='course',
            name='locations',
            field=models.ManyToManyField(to='PlanIlan.Location'),
        ),
        migrations.AddField(
            model_name='course',
            name='teacher_name',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PlanIlan.teacher'),
        ),
    ]
