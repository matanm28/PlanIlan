# Generated by Django 3.1.4 on 2020-12-28 09:39

import datetime
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=80)),
                ('faculty', models.IntegerField(choices=[(-1, 'לא קיים'), (1, 'לימודי יסוד - תנ"ך'), (2, 'לימודי יסוד - תלמוד'), (3, 'פילוסופיה יהודית'), (4, 'לימודי יסוד - תולדות ישראל'), (5, 'המדרשה לנשים'), (6, 'הבעה אקדמית ואולפן'), (8, 'תנ"ך'), (9, 'תלמוד ותושב"ע'), (10, 'תושב"ע'), (11, 'תולדות ישראל ויהדות זמננו'), (12, 'המחלקה ללשון עברית וללשונות שמיות'), (13, 'ספרות עם ישראל'), (16, 'לימודי ארץ ישראל וארכיאולוגיה'), (17, 'מדעי היהדות'), (18, 'הסטוריה כללית'), (19, 'מזרח התיכון'), (21, 'אמנות יהודית'), (22, 'לימודי תעודה בעריכה'), (25, 'תכנית ברוקדייל'), (27, 'לימודי פרשנות ותרבות'), (30, 'מחשבת ישראל'), (31, 'פילוסופיה'), (33, 'ספרות'), (35, 'מדעי המידע'), (36, 'המחלקה לערבית'), (37, 'בלשנות וספרות אנגלית'), (41, 'אנגלית כשפה זרה'), (43, 'המחלקה לתרבות צרפת'), (46, 'לימודים קלאסיים'), (47, 'מוסיקה'), (50, 'תרגום וחקר התרגום'), (54, 'מדעי הרוח'), (55, 'המחלקה לניהול'), (60, 'פסיכולוגיה'), (63, 'ביה"ס לתקשורת'), (64, 'סוציולוגיה ואנתרופולוגיה'), (66, 'כלכלה'), (70, 'מינהל עסקים'), (71, 'מדעי המדינה'), (72, 'המכון לשלטון מקומי'), (73, 'קרימינולוגיה'), (74, 'מדעי החברה'), (75, 'גיאוגרפיה'), (76, 'עבודה סוציאלית'), (77, 'חינוך'), (79, 'הוראה'), (80, 'מדעי החיים'), (81, 'הפקולטה לרפואה'), (82, 'אופטימטריה'), (83, 'הנדסה'), (84, 'כימיה'), (86, 'פיסיקה'), (88, 'מתמטיקה'), (89, 'למדעי המחשב'), (93, 'רב תחומי'), (94, 'דיפלומה'), (99, 'הפקולטה למשפטים'), (272, 'מדעי המוח'), (273, 'לימודי מגדר'), (275, 'מדעי המוח לתארים מתקדמים')])),
                ('semester', models.IntegerField(choices=[(1, "סמסטר א'"), (2, "סמסטר ב'"), (3, 'סמסטר קיץ'), (4, 'שנתי')])),
                ('details_link', models.URLField(null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LessonTime',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.IntegerField(choices=[(1, 'א'), (2, 'ב'), (3, 'ג'), (4, 'ד'), (5, 'ה'), (6, 'ו')])),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('building_name', models.CharField(max_length=80)),
                ('building_number', models.IntegerField(null=True)),
                ('class_number', models.IntegerField(null=True)),
                ('online', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('name', models.CharField(max_length=80, primary_key=True, serialize=False)),
                ('title', models.IntegerField(choices=[(0, 'ד"ר'), (1, "פרופ'"), (2, 'מר'), (3, 'גברת')])),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('user_name', models.CharField(editable=False, max_length=30, primary_key=True, serialize=False, unique=True)),
                ('email', models.EmailField(editable=False, max_length=254)),
                ('salt', models.UUIDField(editable=False)),
                ('password_hash', models.BinaryField(max_length=1024)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TeacherRating',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('average', models.IntegerField(default=None, null=True, validators=[django.core.validators.MinValueValidator(0, 'Value should not fall short of 0'), django.core.validators.MaxValueValidator(5, 'Value should not exceed 5')])),
                ('amount_of_raters', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0, 'Value has to be a natural number')])),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PlanIlan.teacher')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TeacherPost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(default=datetime.datetime.now)),
                ('amount_of_likes', models.IntegerField(default=0)),
                ('headline', models.CharField(max_length=256)),
                ('text', models.TextField()),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PlanIlan.user')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PlanIlan.teacher')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CourseRating',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('average', models.IntegerField(default=None, null=True, validators=[django.core.validators.MinValueValidator(0, 'Value should not fall short of 0'), django.core.validators.MaxValueValidator(5, 'Value should not exceed 5')])),
                ('amount_of_raters', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0, 'Value has to be a natural number')])),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PlanIlan.course')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CoursePost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(default=datetime.datetime.now)),
                ('amount_of_likes', models.IntegerField(default=0)),
                ('headline', models.CharField(max_length=256)),
                ('text', models.TextField()),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PlanIlan.user')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PlanIlan.course')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='course',
            name='lesson_times',
            field=models.ManyToManyField(to='PlanIlan.LessonTime'),
        ),
        migrations.AddField(
            model_name='course',
            name='locations',
            field=models.ManyToManyField(to='PlanIlan.Location'),
        ),
        migrations.AddField(
            model_name='course',
            name='teacher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PlanIlan.teacher'),
        ),
    ]
